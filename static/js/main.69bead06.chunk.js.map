{"version":3,"sources":["QuizHeader.js","QuestionCard.js","Timer.js","QuizBody.js","Data.js","Instructions.js","App.js","serviceWorker.js","index.js"],"names":["QuizHeader","props","state","className","React","Component","QuestionCard","this","content","id","level","series","questionText","options","onClick","e","selectedAnswer","Timer","startTimer","countInterval","setInterval","setState","count","outerInterval","clearInterval","updateQuestion","QuizBody","event","score","answer","Data","target","textContent","currentQuestionId","reset","questionType","questionImage","resetTimer","length","Instructions","start","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.69bead06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./QuizHeader.css\";\r\n\r\nclass QuizHeader extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\trender() {\r\n\t\treturn <div className=\"header-body\">QUIZ</div>;\r\n\t}\r\n}\r\n\r\nexport default QuizHeader;\r\n","import React from \"react\";\r\nimport \"./QuestionCard.css\";\r\n\r\nclass QuestionCard extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\trender() {\r\n\t\tconst { id, level, series, questionText, options } = this.props.content;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"info-wrapper\">\r\n\t\t\t\t\t<span>Question No. : {id + 1} </span>\r\n\t\t\t\t\t<span>Level: {level} </span>\r\n\t\t\t\t\t<span>Series Name: {series}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"question\">Q. {questionText}</div>\r\n\t\t\t\t<div className=\"options-wrapper\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li onClick={e => this.props.selectedAnswer(e, id)}>\r\n\t\t\t\t\t\t\t<span>{options[0]}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li onClick={e => this.props.selectedAnswer(e, id)}>\r\n\t\t\t\t\t\t\t<span>{options[1]}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li onClick={e => this.props.selectedAnswer(e, id)}>\r\n\t\t\t\t\t\t\t<span>{options[2]}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li onClick={e => this.props.selectedAnswer(e, id)}>\r\n\t\t\t\t\t\t\t<span>{options[3]}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default QuestionCard;\r\n","import React from \"react\";\r\nimport \"./timer.css\";\r\n\r\nclass Timer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcount: 1,\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <div className=\"timerBody\">{this.state.count}</div>;\r\n\t}\r\n\r\n\tshouldComponentUpdate() {\r\n\t\treturn this.state.count > 0 && this.state.count < 20;\r\n\t}\r\n\r\n\tstartTimer = () => {\r\n\t\tthis.countInterval = setInterval(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcount: this.state.count + 1,\r\n\t\t\t});\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.startTimer();\r\n\r\n\t\tthis.outerInterval = setInterval(() => {\r\n\t\t\tclearInterval(this.countInterval);\r\n\t\t\tthis.setState({ count: 1 });\r\n\t\t\tthis.startTimer();\r\n\t\t\tthis.props.updateQuestion();\r\n\t\t}, 20000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.countInterval);\r\n\t\tclearInterval(this.outerInterval);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps() {\r\n\t\tclearInterval(this.countInterval);\r\n\t\tclearInterval(this.outerInterval);\r\n\r\n\t\tthis.outerInterval = setInterval(() => {\r\n\t\t\tclearInterval(this.countInterval);\r\n\t\t\tthis.setState({ count: 1 });\r\n\t\t\tthis.startTimer();\r\n\t\t\tthis.props.updateQuestion();\r\n\t\t}, 20000);\r\n\r\n\t\tthis.setState({ count: 1 });\r\n\t\tthis.startTimer();\r\n\t}\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport \"./QuizBody.css\";\r\nimport Data from \"./Data.js\";\r\nimport QuestionCard from \"./QuestionCard.js\";\r\nimport Timer from \"./Timer.js\";\r\n\r\nclass QuizBody extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tData: Data(),\r\n\t\t\tscore: 0,\r\n\t\t\tcurrentQuestionId: 0,\r\n\t\t\tresetTimer: true,\r\n\t\t};\r\n\t}\r\n\r\n\tselectedAnswer = (event, id) => {\r\n\t\tlet score = this.state.score;\r\n\t\tconst { answer } = this.state.Data[id];\r\n\t\tif (event.target.textContent === answer) {\r\n\t\t\tscore += 3;\r\n\t\t\tthis.setState({ score: score });\r\n\t\t} else {\r\n\t\t\tscore -= 1;\r\n\t\t\tthis.setState({ score: score });\r\n\t\t}\r\n\t\tthis.updateQuestion();\r\n\t};\r\n\r\n\tupdateQuestion = () => {\r\n\t\tlet id = this.state.currentQuestionId;\r\n\t\tid += 1;\r\n\t\tthis.setState({\r\n\t\t\tcurrentQuestionId: id,\r\n\t\t});\r\n\t};\r\n\r\n\treset = () => {\r\n\t\tthis.setState({\r\n\t\t\tscore: 0,\r\n\t\t\tcurrentQuestionId: 0,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.state.currentQuestionId <= this.state.Data.length - 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"scoreTimerWrapper\">\r\n\t\t\t\t\t\t<span className=\"score\">SCORE: {this.state.score}</span>\r\n\t\t\t\t\t\t<Timer\r\n\t\t\t\t\t\t\tresetTimer={this.state.resetTimer}\r\n\t\t\t\t\t\t\tupdateQuestion={this.updateQuestion}></Timer>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"quiz-body\">\r\n\t\t\t\t\t\t<QuestionCard\r\n\t\t\t\t\t\t\tcontent={this.state.Data[this.state.currentQuestionId]}\r\n\t\t\t\t\t\t\tselectedAnswer={this.selectedAnswer}></QuestionCard>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"endPopup\">\r\n\t\t\t\t\t<p className=\"popup-score\">Score: {this.state.score}</p>\r\n\t\t\t\t\t<button onClick={this.reset} className=\"reset-button\">\r\n\t\t\t\t\t\tRESET\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default QuizBody;\r\n\r\n// import React from \"react\";\r\n// import \"./QuizBody.css\";\r\n// import Data from \"./Data.js\";\r\n// import QuestionCard from \"./QuestionCard.js\";\r\n\r\n// class QuizBody extends React.Component {\r\n// \tconstructor(props) {\r\n// \t\tsuper(props);\r\n// \t\tthis.state = {\r\n// \t\t\tData: Data(),\r\n// \t\t\tscore: 0,\r\n// \t\t\tcurrentQuestionId: 0,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tselectedAnswer = (event, id) => {\r\n// \t\tlet score = this.state.score;\r\n// \t\tconst { answer } = this.state.Data[id];\r\n// \t\tif (event.target.textContent === answer) {\r\n// \t\t\tscore += 3;\r\n// \t\t\tthis.setState({ score: score });\r\n// \t\t} else {\r\n// \t\t\tscore -= 1;\r\n// \t\t\tthis.setState({ score: score });\r\n// \t\t}\r\n// \t\tthis.updateQuestion();\r\n// \t};\r\n\r\n// \tupdateQuestion = () => {\r\n// \t\tlet id = this.state.currentQuestionId;\r\n// \t\tid += 1;\r\n// \t\tthis.setState({\r\n// \t\t\tcurrentQuestionId: id,\r\n// \t\t});\r\n// \t\t// this.clockStart();\r\n// \t};\r\n\r\n// \treset = () => {\r\n// \t\tthis.setState({\r\n// \t\t\tscore: 0,\r\n// \t\t\tcurrentQuestionId: 0,\r\n// \t\t});\r\n// \t};\r\n\r\n// \t// clockStart = () => {\r\n// \t// \tlet seconds = 1;\r\n// \t// \tlet timerId = setInterval(() => {\r\n// \t// \t\tconsole.log(seconds++);\r\n// \t// \t\treturn <span>{seconds}</span>;\r\n// \t// \t}, 1000);\r\n// \t// \tsetTimeout(() => {\r\n// \t// \t\tclearInterval(timerId);\r\n// \t// \t\tthis.updateQuestion();\r\n// \t// \t}, 5000);\r\n// \t// };\r\n\r\n// \trender() {\r\n// \t\tif (this.state.currentQuestionId <= this.state.Data.length - 1) {\r\n// \t\t\treturn (\r\n// \t\t\t\t<>\r\n// \t\t\t\t\t<div className=\"score\">SCORE: {this.state.score}</div>\r\n// \t\t\t\t\t<div className=\"quiz-body\">\r\n// \t\t\t\t\t\t<QuestionCard\r\n// \t\t\t\t\t\t\tcontent={this.state.Data[this.state.currentQuestionId]}\r\n// \t\t\t\t\t\t\tselectedAnswer={this.selectedAnswer}></QuestionCard>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</>\r\n// \t\t\t);\r\n// \t\t} else {\r\n// \t\t\treturn (\r\n// \t\t\t\t<div className=\"endPopup\">\r\n// \t\t\t\t\t<p className=\"popup-score\">Score: {this.state.score}</p>\r\n// \t\t\t\t\t<button onClick={this.reset} className=\"reset-button\">\r\n// \t\t\t\t\t\tRESET\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t</div>\r\n// \t\t\t);\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\n// export default QuizBody;\r\n\r\n// // import React from \"react\";\r\n// // import \"./QuizBody.css\";\r\n// // import Data from \"./Data.js\";\r\n// // import QuestionCard from \"./QuestionCard.js\";\r\n\r\n// // class QuizBody extends React.Component {\r\n// // \tconstructor(props) {\r\n// // \t\tsuper(props);\r\n// // \t\tthis.state = {\r\n// // \t\t\tData: Data(),\r\n// // \t\t\tscore: 0,\r\n// // \t\t};\r\n// // \t}\r\n\r\n// // \tselectedAnswer = (event, id) => {\r\n// // \t\tconsole.log(event.target.textContent, id);\r\n// // \t\tlet score = this.state.score;\r\n// // \t\tconst { answer } = this.state.Data[id];\r\n// // \t\tif (event.target.textContent === answer) {\r\n// // \t\t\tscore += 3;\r\n// // \t\t\tthis.setState({ score: score });\r\n// // \t\t} else {\r\n// // \t\t\tscore -= 1;\r\n// // \t\t\tthis.setState({ score: score });\r\n// // \t\t}\r\n// // \t};\r\n\r\n// // \trender() {\r\n// // \t\treturn (\r\n// // \t\t\t<div className=\"quiz-body\">\r\n// // \t\t\t\t<div>\r\n// // \t\t\t\t\t<div>SCORE: {this.state.score}</div>\r\n// // \t\t\t\t\t<div>TIMER</div>\r\n// // \t\t\t\t</div>\r\n// // \t\t\t\t{this.state.Data.map((cont, index) => {\r\n// // \t\t\t\t\treturn (\r\n// // \t\t\t\t\t\t<QuestionCard\r\n// // \t\t\t\t\t\t\tcontent={cont}\r\n// // \t\t\t\t\t\t\tselectedAnswer={this.selectedAnswer}></QuestionCard>\r\n// // \t\t\t\t\t);\r\n// // \t\t\t\t})}\r\n// // \t\t\t</div>\r\n// // \t\t);\r\n// // \t}\r\n// // }\r\n\r\n// // export default QuizBody;\r\n","export default function Data() {\r\n\treturn [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tlevel: \"Easy\",\r\n\t\t\tseries: \"F.R.I.E.N.D.S.\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: \"What does Joey not share?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\"Money\", \"Room\", \"Food\", \"Friends\"],\r\n\t\t\tanswer: \"Food\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tlevel: \"Difficult\",\r\n\t\t\tseries: \"How I Met Your Mother\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: \"What is Ted's Middle Name?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\"Rosalind\", \"Evelyn\", \"Marylin\", \"Stevenson\"],\r\n\t\t\tanswer: \"Evelyn\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tlevel: \"Easy\",\r\n\t\t\tseries: \"The Big Bang Theory\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: \"What is Howard?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\"Astronaut\", \"Engineer\", \"Father\", \"All of the above\"],\r\n\t\t\tanswer: \"All of the above\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tlevel: \"Medium\",\r\n\t\t\tseries: \"Suits\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText:\r\n\t\t\t\t\"Which Institute's graduates are only allowed in Pearson Specter Litt?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\"Princeton\", \"Cambridge\", \"Stanford\", \"Harvard\"],\r\n\t\t\tanswer: \"Harvard\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tlevel: \"Medium\",\r\n\t\t\tseries: \"How I Met Your Mother\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: \"What is Lily and Marshall's son's Middle Name?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\"Wait For It\", \"Go Through It\", \"See To It\", \"Go For It\"],\r\n\t\t\tanswer: \"Wait For It\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tlevel: \"Difficult\",\r\n\t\t\tseries: \"Modern Family\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: \"What is Jay and Gloria's son's full name?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\r\n\t\t\t\t\"Joe Prichett\",\r\n\t\t\t\t\"Fulgencio Joseph Prichett\",\r\n\t\t\t\t\"Jay Prichett Junior\",\r\n\t\t\t\t\"None of the above\",\r\n\t\t\t],\r\n\t\t\tanswer: \"Fulgencio Joseph Prichett\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 6,\r\n\t\t\tlevel: \"Easy\",\r\n\t\t\tseries: \"Brooklyn Nine-Nine\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: \"Why does Jake's towel not catch on fire?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\r\n\t\t\t\t\"Because it is fire proof\",\r\n\t\t\t\t\"Because it was mistakenly cut from fire department's materials \",\r\n\t\t\t\t\"Because it never fully dries\",\r\n\t\t\t\t\"Trick question, he does not have a towel\",\r\n\t\t\t],\r\n\t\t\tanswer: \"Because it never fully dries\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 7,\r\n\t\t\tlevel: \"Easy\",\r\n\t\t\tseries: \"Game of Thrones\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: `What do you feel when people watching season 1 say, \"Ned Stark is going to be King at end\"?`,\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\r\n\t\t\t\t\"Sorry for them\",\r\n\t\t\t\t\"Secret Laughter\",\r\n\t\t\t\t\"Sure buddy with air quotes\",\r\n\t\t\t\t\"All of the above\",\r\n\t\t\t],\r\n\t\t\tanswer: \"All of the above\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 8,\r\n\t\t\tlevel: \"Difficult\",\r\n\t\t\tseries: \"How to get away with Murder\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText:\r\n\t\t\t\t\"Ok, let's get serious again, What is Laurel's child's name?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\"Cristopher\", \"Wesley\", \"Chris\", \"Jhonny\"],\r\n\t\t\tanswer: \"Cristopher\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 9,\r\n\t\t\tlevel: \"Easy\",\r\n\t\t\tseries: \"Sherlock\",\r\n\t\t\tquestionType: \"text\",\r\n\t\t\tquestionText: \"What is Sherlock's biggest enemy's name?\",\r\n\t\t\tquestionImage: \"\",\r\n\t\t\toptions: [\r\n\t\t\t\t\"Mycroft Holmes\",\r\n\t\t\t\t\"Jim Moriarty\",\r\n\t\t\t\t\"D.I. Lestrade\",\r\n\t\t\t\t\"Molly Hooper\",\r\n\t\t\t],\r\n\t\t\tanswer: \"Jim Moriarty\",\r\n\t\t},\r\n\t];\r\n}\r\n// export default function Data() {\r\n// \treturn [\r\n// \t\t{\r\n// \t\t\tid: 0,\r\n// \t\t\tlevel: \"Easy\",\r\n// \t\t\tcategory: \"General Knowledge\",\r\n// \t\t\tquestionType: \"text\",\r\n// \t\t\tquestionText:\r\n// \t\t\t\t\"Who is the captain of Indian Cricket Team across all formats?\",\r\n// \t\t\tquestionImage: \"\",\r\n// \t\t\toptions: [\r\n// \t\t\t\t\"Rohit Sharma\",\r\n// \t\t\t\t\"Virat Kohli\",\r\n// \t\t\t\t\"Jasprit Bumrah\",\r\n// \t\t\t\t\"Cheteshwar Pujara\",\r\n// \t\t\t],\r\n// \t\t\tanswer: \"Virat Kohli\",\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tid: 1,\r\n// \t\t\tlevel: \"Easy\",\r\n// \t\t\tcategory: \"General Knowledge\",\r\n// \t\t\tquestionType: \"text\",\r\n// \t\t\tquestionText: \"What is the second highest mountain peak in India?\",\r\n// \t\t\tquestionImage: \"\",\r\n// \t\t\toptions: [\"Nanda Devi\", \"Kangchenjunga\", \"Karakoram\", \"Kamet\"],\r\n// \t\t\tanswer: \"Nanda Devi\",\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tid: 2,\r\n// \t\t\tlevel: \"Easy\",\r\n// \t\t\tcategory: \"General Knowledge\",\r\n// \t\t\tquestionType: \"text\",\r\n// \t\t\tquestionText: \"India won its first Olympic hockey gold in which year?\",\r\n// \t\t\tquestionImage: \"\",\r\n// \t\t\toptions: [\"1928\", \"1932\", \"1936\", \"1948\"],\r\n// \t\t\tanswer: \"1928\",\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tid: 3,\r\n// \t\t\tlevel: \"Easy\",\r\n// \t\t\tcategory: \"General Knowledge\",\r\n// \t\t\tquestionType: \"text\",\r\n// \t\t\tquestionText: \"The present Lok Sabha is the ____\",\r\n// \t\t\tquestionImage: \"\",\r\n// \t\t\toptions: [\r\n// \t\t\t\t\"14th Lok Sabha\",\r\n// \t\t\t\t\"15th Lok Sabha\",\r\n// \t\t\t\t\"16th Lok Sabha\",\r\n// \t\t\t\t\"17th Lok Sabha\",\r\n// \t\t\t],\r\n// \t\t\tanswer: \"17th Lok Sabha\",\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tid: 4,\r\n// \t\t\tlevel: \"Easy\",\r\n// \t\t\tcategory: \"Honour And Awards\",\r\n// \t\t\tquestionType: \"text\",\r\n// \t\t\tquestionText: \"\tWhich is the highest gallantry award in India?\",\r\n// \t\t\tquestionImage: \"\",\r\n// \t\t\toptions: [\r\n// \t\t\t\t\"Param Vishishtat Seva Medal\",\r\n// \t\t\t\t\"Param Vir Chakra\",\r\n// \t\t\t\t\"Kirti Chakra\",\r\n// \t\t\t\t\"Vir Chakra\",\r\n// \t\t\t],\r\n// \t\t\tanswer: \"Param Vir Chakra\",\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tid: 5,\r\n// \t\t\tlevel: \"Easy\",\r\n// \t\t\tcategory: \"General Knowledge\",\r\n// \t\t\tquestionType: \"text\",\r\n// \t\t\tquestionText:\r\n// \t\t\t\t\"Who was the first Indian Chief of Army Staff of the Indian Army ?\",\r\n// \t\t\tquestionImage: \"\",\r\n// \t\t\toptions: [\r\n// \t\t\t\t\"Gen. K.M. Cariappa\",\r\n// \t\t\t\t\"Vice-Admiral R.D. Katari\",\r\n// \t\t\t\t\"Gen. Maharaja Rajendra Singhji\",\r\n// \t\t\t\t\"None of the above\",\r\n// \t\t\t],\r\n// \t\t\tanswer: \"Gen. K.M. Cariappa\",\r\n// \t\t},\r\n// \t];\r\n// }\r\n","import React from \"react\";\r\n\r\nclass Instructions extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"popup-container\">\r\n\t\t\t\t<div className=\"startPopup\">\r\n\t\t\t\t\t<div className=\"instructions\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<h2>Instructions:</h2>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tEach question has <strong>20 seconds</strong> timer.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tIf question is <span>NOT answered</span> in 20 seconds, no\r\n\t\t\t\t\t\t\t\t\tpoints will be awarded or deducted.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tIf question is <span>answered incorrectly</span>,\r\n\t\t\t\t\t\t\t\t\t<strong> 1 point</strong> will be\r\n\t\t\t\t\t\t\t\t\t<strong> deducted</strong> from score.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span>Correct answer</span> will be awarded with\r\n\t\t\t\t\t\t\t\t\t<strong> 3 points</strong>.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tAt the End of Quiz, Score will be displayed and a option to\r\n\t\t\t\t\t\t\t\t\t<strong> restart</strong> the quiz will be given.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>Max Score: 30, Min Score: -10</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tTip: Read the <strong>Series Name</strong> before answering\r\n\t\t\t\t\t\t\t\t\tthe question.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={this.props.start} className=\"start-button\">\r\n\t\t\t\t\t\tSTART\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Instructions;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport QuizHeader from \"./QuizHeader.js\";\nimport QuizBody from \"./QuizBody.js\";\nimport Instructions from \"./Instructions.js\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tstart: false,\n\t\t};\n\t}\n\n\tstart = () => {\n\t\tthis.setState({ start: true });\n\t};\n\n\trender() {\n\t\tif (!this.state.start) {\n\t\t\treturn <Instructions start={this.start}></Instructions>;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<QuizHeader></QuizHeader>\n\t\t\t\t\t<QuizBody></QuizBody>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}